/* Syntax highlighting */

.codehilite code {
  background: var(--code-bg);
  display: block;
  padding: 12px 6px;
  overflow: scroll;
}

code, .code, .codehilite {
  font-family: "Source Code Pro", monospace;
}

.codehilite {font-size: 0.7rem;}

.codehilite .hll { background-color: #ffffcc }
.codehilite .c { color: var(--lima) } /* Comment */
.codehilite .err {} /* Error */
.codehilite .k { color: var(--denim) } /* Keyword */
.codehilite .cm { color: var(--lima) } /* Comment.Multiline */
.codehilite .cp { color: var(--denim) } /* Comment.Preproc */
.codehilite .c1 { color: var(--lima) } /* Comment.Single */
.codehilite .cs { color: var(--lima) } /* Comment.Special */
.codehilite .ge { font-style: italic } /* Generic.Emph */
.codehilite .gh { font-weight: bold } /* Generic.Heading */
.codehilite .gp { font-weight: bold } /* Generic.Prompt */
.codehilite .gs { font-weight: bold } /* Generic.Strong */
.codehilite .gu { font-weight: bold } /* Generic.Subheading */
.codehilite .kc { color: var(--denim) } /* Keyword.Constant */
.codehilite .kd { color: var(--denim) } /* Keyword.Declaration */
.codehilite .kn { color: var(--denim) } /* Keyword.Namespace */
.codehilite .kp { color: var(--denim) } /* Keyword.Pseudo */
.codehilite .kr { color: var(--denim) } /* Keyword.Reserved */
.codehilite .kt { color: var(--fulvors) } /* Keyword.Type */
.codehilite .s { color: var(--ruby) } /* Literal.String */
.codehilite .nc { color: var(--fulvors) } /* Name.Class */
.codehilite .ow { color: var(--denim) } /* Operator.Word */
.codehilite .sb { color: var(--ruby) } /* Literal.String.Backtick */
.codehilite .sc { color: var(--ruby) } /* Literal.String.Char */
.codehilite .sd { color: var(--ruby) } /* Literal.String.Doc */
.codehilite .s2 { color: var(--ruby) } /* Literal.String.Double */
.codehilite .se { color: var(--ruby) } /* Literal.String.Escape */
.codehilite .sh { color: var(--ruby) } /* Literal.String.Heredoc */
.codehilite .si { color: var(--ruby) } /* Literal.String.Interpol */
.codehilite .sx { color: var(--ruby) } /* Literal.String.Other */
.codehilite .sr { color: var(--ruby) } /* Literal.String.Regex */
.codehilite .s1 { color: var(--ruby) } /* Literal.String.Single */
.codehilite .ss { color: var(--ruby) } /* Literal.String.Symbol */
